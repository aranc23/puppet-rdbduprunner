# @summary used by rdbduprunner to configure the software
class rdbduprunner::configure
(
)
{
  $backupsets = $rdbduprunner::backupsets
  $backupdestinations = $rdbduprunner::backupdestinations

  concat { $rdbduprunner::config_file:
    owner  => $rdbduprunner::owner,
    group  => $rdbduprunner::group,
    mode   => '0440',
  }
  # concat::fragment { "warning in ${rdbduprunner::config_file}":
  #   target  => $rdbduprunner::config_file,
  #   content => "# generated by puppet, DO NOT EDIT\n",
  #   order   => '00',
  # }
  $integer_vars = ['MaxInc','MaxProcs','MaxWait']
  $string_vars = ['ZfsBinary','DefaultBackupDestination','DuplicityBinary','RdiffBackupBinary','RsyncBinary','LockFile','ExcludePath','TempDir']
  $array_vars = ['AllowFS']
  $boolean_vars = ['UseAgent']
  concat::fragment { "global options ${rdbduprunner::config_file}":
    target  => $rdbduprunner::config_file,
    content => template('rdbduprunner/global.erb'),
    order   => '05',
  }
  concat::fragment { 'include conf.d':
    target  => $rdbduprunner::config_file,
    content => "<<include ${rdbduprunner::config_dir}/conf.d/*.conf>>\n",
    order   => '99',
  }
  $backupset_defaults = {
    skips   => $rdbduprunner::default_skips,
    skipres => $rdbduprunner::default_skipres,
  }
  $rdbduprunner::backupsets.each |String $t, Hash $h| {
    $tidy = $backupset_defaults + delete(delete($h,'tag'),'export')
    if( $h['export'] == true ) {
      @@rdbduprunner::backupset { $t:
        config_file => $rdbduprunner::config_file,
        concat      => true,
        *           => $tidy,
        tag         => $h['tag']
      }
    }
    else {
      ::rdbduprunner::backupset { $t:
        config_file => $rdbduprunner::config_file,
        concat      => true,
        *           => $tidy,
      }
    }
  }
  $backupdestination_defaults = {
    backup_type => 'rsync',
  }
  $rdbduprunner::backupdestinations.each |String $t, Hash $h| {
    ::rdbduprunner::backupdestination { $t:
      config_file => $rdbduprunner::config_file,
      concat      => true,
      *           => $backupdestination_defaults + $h,
    }
  }
  file { "${rdbduprunner::config_dir}/excludes":
    ensure => directory,
    owner  => $rdbduprunner::owner,
    group  => $rdbduprunner::group,
    mode   => '0775',
    purge  => $rdbduprunner::purge_excludes,
  }
  $rdbduprunner::rsync_tag_excludes.each |String $tag, Array $e| {
    file { "${rdbduprunner::config_dir}/excludes/${tag}":
      owner   => $rdbduprunner::owner,
      group   => $rdbduprunner::group,
      mode    => '0664',
      content => inline_template("<% @e.each do |ln| -%><%= ln %>\n<% end -%>"),
    }
  }
  file { "${rdbduprunner::config_dir}/rdb-excludes":
    ensure => directory,
    owner  => $rdbduprunner::owner,
    group  => $rdbduprunner::group,
    mode   => '0775',
    purge  => $rdbduprunner::purge_excludes,
  }
  $rdbduprunner::rdbdup_tag_excludes.each |String $tag, Array $e| {
    file { "${rdbduprunner::config_dir}/rdb-excludes/${tag}":
      owner   => $rdbduprunner::owner,
      group   => $rdbduprunner::group,
      mode    => '0644',
      content => inline_template("<% @e.each do |ln| -%><%= ln %>\n<% end -%>"),
    }
  }
}
