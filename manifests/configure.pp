# @summary used by rdbduprunner to configure the software
class rdbduprunner::configure
(
  Hash[String,Struct[{
    zfscreate                => Optional[Boolean],
    zfssnapshot              => Optional[Boolean],
    inplace                  => Optional[Boolean],
    checksum                 => Optional[Boolean],
    wholefile                => Optional[Boolean],
    backup_type              => Optional[Enum['rsync','duplicity','rdiff-backup']],
    path                     => String,
    percentused              => Optional[Integer],
    minfree                  => Optional[Integer],
    maxinc                   => Optional[Integer],
  }]] $backupdestinations = $rdbduprunner::backupdestinations,
  Hash[String,Struct[{
    config_file              => Optional[String],
    host                     => Optional[String],
    paths                    => Optional[Array[String]],
    skips                    => Optional[Array[String]],
    skipres                  => Optional[Array[String]],
    excludes                 => Optional[Array[String]],
    allowfs                  => Optional[Array[String]],
    backupdestination        => Optional[String],
    inventory                => Optional[Boolean],
    inplace                  => Optional[Boolean],
    checksum                 => Optional[Boolean],
    wholefile                => Optional[Boolean],
    prerun                   => Optional[String],
    postrun                  => Optional[String],
    rtag                     => Optional[String],
    disabled                 => Optional[Boolean],
    maxinc                   => Optional[Integer],
    export                   => Optional[Boolean],
    tag                      => Optional[String],
  }]] $backupsets = $rdbduprunner::backupsets,
  String $config_dir = $rdbduprunner::config_dir,
  String $config_file = $rdbduprunner::config_file,
  Variant[String,Integer] $owner = $rdbduprunner::owner,
  Variant[String,Integer] $group = $rdbduprunner::group,
  Boolean $purge_excludes = $rdbduprunner::purge_excludes,
)
{

  concat { $config_file:
    owner => $owner,
    group => $group,
    mode  => '0440',
  }
  # concat::fragment { "warning in ${config_file}":
  #   target  => $config_file,
  #   content => "# generated by puppet, DO NOT EDIT\n",
  #   order   => '00',
  # }
  $integer_vars = ['MaxInc','MaxProcs','MaxWait']
  $string_vars = ['ZfsBinary','DefaultBackupDestination','DuplicityBinary',
                  'RdiffBackupBinary','RsyncBinary','LockFile','ExcludePath','TempDir']
  $array_vars = ['AllowFS']
  $boolean_vars = ['UseAgent','Inplace','Checksum','WholeFile','Stats']
  concat::fragment { "global options ${config_file}":
    target  => $config_file,
    content => template('rdbduprunner/global.erb'),
    order   => '05',
  }
  concat::fragment { 'include conf.d':
    target  => $config_file,
    content => "<<include ${config_dir}/conf.d/*.conf>>\n",
    order   => '99',
  }
  $backupset_defaults = {
    skips   => $rdbduprunner::default_skips,
    skipres => $rdbduprunner::default_skipres,
  }
  $rdbduprunner::backupsets.each |String $t, Hash $h| {
    $tidy = $backupset_defaults + delete(delete($h,'tag'),'export')
    if( $h['export'] == true ) {
      @@rdbduprunner::backupset { $t:
        config_file => $config_file,
        concat      => true,
        *           => $tidy,
        tag         => $h['tag']
      }
    }
    else {
      ::rdbduprunner::backupset { $t:
        config_file => $config_file,
        concat      => true,
        *           => $tidy,
      }
    }
  }
  $backupdestination_defaults = {
    backup_type => 'rsync',
  }
  $rdbduprunner::backupdestinations.each |String $t, Hash $h| {
    ::rdbduprunner::backupdestination { $t:
      config_file => $config_file,
      concat      => true,
      *           => $backupdestination_defaults + $h,
    }
  }
  file { "${config_dir}/excludes":
    ensure => directory,
    owner  => $owner,
    group  => $group,
    mode   => '0775',
    purge  => $purge_excludes,
  }
  $rdbduprunner::rsync_tag_excludes.each |String $tag, Array $e| {
    file { "${config_dir}/excludes/${tag}":
      owner   => $owner,
      group   => $group,
      mode    => '0664',
      content => inline_template("<% @e.each do |ln| -%><%= ln %>\n<% end -%>"),
    }
  }
  file { "${config_dir}/rdb-excludes":
    ensure => directory,
    owner  => $owner,
    group  => $group,
    mode   => '0775',
    purge  => $purge_excludes,
  }
  $rdbduprunner::rdbdup_tag_excludes.each |String $tag, Array $e| {
    file { "${config_dir}/rdb-excludes/${tag}":
      owner   => $owner,
      group   => $group,
      mode    => '0644',
      content => inline_template("<% @e.each do |ln| -%><%= ln %>\n<% end -%>"),
    }
  }
}
